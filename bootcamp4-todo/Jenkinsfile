pipeline {
    agent any
    environment {
            frontendRegistry = "docker.pkg.github.com/akhilanilm/todo-app-jenkins/todo-client"
            backendRegistry = "docker.pkg.github.com/akhilanilm/todo-app-jenkins/task-management"
            registryCredential = 'github-registry'
            dockerImage=''
            POSTGRES_USER = credentials('POSTGRES_USER')
            POSTGRES_PASSWORD = credentials('POSTGRES_PASSWORD')
            POSTGRES_DB = credentials('POSTGRES_DB')
            GH_TOKEN = credentials('GH_TOKEN')
          }
    stages {
        stage('Create task-management package') {
            steps {
                checkout scm
                sh "cd bootcamp4-todo/backend/task-management && mvn -DskipTests clean package"
            }
        }
        stage('Install frontend dependencies') {
            steps {
                sh "cd bootcamp4-todo/web-ui/ && npm install"
            }
        }
        stage('Test') {
             environment {
                    POSTGRES_HOST = "localhost"
                    POSTGRES_PORT = "5432"
                    API_IDENTIFIER = "https://bootcamp-todo-user.us.auth0.com/api/v2/"
                    ISSUER_URI = "https://bootcamp-todo-user.us.auth0.com/"
                }
            steps {
                sh "cd bootcamp4-todo/backend/task-management && mvn test"
                sh "cd bootcamp4-todo/web-ui/ && npm run test"
            }
        }
        stage('Building Backend Docker Image') {
              steps{
              dir("bootcamp4-todo/backend/task-management"){
              script {
                         dockerImage = docker.build backendRegistry + ":$BUILD_NUMBER"
                       }
              }
              }
            }
        stage('Building Frontend Docker Image') {
              steps{
              dir("bootcamp4-todo/web-ui"){
              script {
                         dockerImage = docker.build frontendRegistry + ":$BUILD_NUMBER"
                       }
              }
              }
            }
        stage('Deploying Backend Docker Image') {
            steps{
            sh 'echo ${GH_TOKEN} | docker login docker.pkg.github.com -u akhilanilm --password-stdin'
            sh 'docker push '+backendRegistry+":$BUILD_NUMBER"
            }
        }
        stage('Deploying Frontend Docker Image') {
            steps{
            sh 'echo ${GH_TOKEN} | docker login docker.pkg.github.com -u akhilanilm --password-stdin'
            sh 'docker push '+frontendRegistry+":$BUILD_NUMBER"
            }
        }
    }
}